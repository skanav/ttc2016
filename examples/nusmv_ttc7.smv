MODULE Component___8(i___22, i___22_present, i_int___65, i_int___65_present)

VAR
		o___20 : boolean;
		o___20_present : boolean;
		o_int___41 : signed word[10];
		o_int___41_present : boolean;
		_current_state : { Init___15, s1___44, s2___68 };



ASSIGN
init(o___20_present) := FALSE;
init(o_int___41_present) := FALSE;
init(_current_state) := Init___15;

TRANS ((_current_state = Init___15) & ((i___22_present = TRUE) & (i_int___65_present = TRUE))) & 
		next(_current_state) = s1___44 & 
		next(o_int___41) = ((i_int___65 < -0sd10_255) ? -0sd10_256 : ((i_int___65 > 0sd10_254) ? 0sd10_255 : i_int___65)) & 
		next(o_int___41_present) = i_int___65_present & 
		next(o___20) = i___22 & 
		next(o___20_present) = i___22_present | 
	((_current_state = Init___15) & !(((i___22_present = TRUE) & (i_int___65_present = TRUE)))) & 
		next(_current_state) = Init___15 & 
		next(o_int___41) = ((-0sd10_1 < -0sd10_255) ? -0sd10_256 : ((-0sd10_1 > 0sd10_254) ? 0sd10_255 : -0sd10_1)) & 
		next(o_int___41_present) = TRUE & 
		next(o___20) = FALSE & 
		next(o___20_present) = TRUE | 
	((_current_state = s1___44) & ((i___22_present = FALSE) & (i_int___65_present = FALSE))) & 
		next(_current_state) = Init___15 & 
		next(o_int___41) = ((-0sd10_1 < -0sd10_255) ? -0sd10_256 : ((-0sd10_1 > 0sd10_254) ? 0sd10_255 : -0sd10_1)) & 
		next(o_int___41_present) = TRUE & 
		next(o___20_present) = FALSE & 
		next(o___20) = o___20 | 
	((_current_state = s1___44) & ((i___22_present = FALSE) | (i_int___65_present = FALSE))) & 
		next(_current_state) = s2___68 & 
		next(o_int___41) = ((0sd10_0 < -0sd10_255) ? -0sd10_256 : ((0sd10_0 > 0sd10_254) ? 0sd10_255 : 0sd10_0)) & 
		next(o_int___41_present) = TRUE & 
		next(o___20) = FALSE & 
		next(o___20_present) = TRUE | 
	((_current_state = s1___44) & (!(((i___22_present = FALSE) & (i_int___65_present = FALSE))) & !(((i___22_present = FALSE) | (i_int___65_present = FALSE))))) & 
		next(_current_state) = s1___44 & 
		next(o_int___41) = ((i_int___65 < -0sd10_255) ? -0sd10_256 : ((i_int___65 > 0sd10_254) ? 0sd10_255 : i_int___65)) & 
		next(o_int___41_present) = i_int___65_present & 
		next(o___20) = i___22 & 
		next(o___20_present) = i___22_present | 
	((_current_state = s2___68) & ((i___22_present = FALSE) | (i_int___65_present = FALSE))) & 
		next(_current_state) = Init___15 & 
		next(o_int___41) = ((-0sd10_1 < -0sd10_255) ? -0sd10_256 : ((-0sd10_1 > 0sd10_254) ? 0sd10_255 : -0sd10_1)) & 
		next(o_int___41_present) = TRUE & 
		next(o___20) = FALSE & 
		next(o___20_present) = TRUE | 
	((_current_state = s2___68) & !(((i___22_present = FALSE) | (i_int___65_present = FALSE)))) & 
		next(_current_state) = s2___68 & 
		next(o_int___41) = ((0sd10_0 < -0sd10_255) ? -0sd10_256 : ((0sd10_0 > 0sd10_254) ? 0sd10_255 : 0sd10_0)) & 
		next(o_int___41_present) = TRUE & 
		next(o___20) = FALSE & 
		next(o___20_present) = TRUE | 
	((((((!(((_current_state = Init___15) & ((i___22_present = TRUE) & (i_int___65_present = TRUE)))) & !(((_current_state = Init___15) & !(((i___22_present = TRUE) & (i_int___65_present = TRUE)))))) & !(((_current_state = s1___44) & ((i___22_present = FALSE) & (i_int___65_present = FALSE))))) & !(((_current_state = s1___44) & ((i___22_present = FALSE) | (i_int___65_present = FALSE))))) & !(((_current_state = s1___44) & (!(((i___22_present = FALSE) & (i_int___65_present = FALSE))) & !(((i___22_present = FALSE) | (i_int___65_present = FALSE))))))) & !(((_current_state = s2___68) & ((i___22_present = FALSE) | (i_int___65_present = FALSE))))) & !(((_current_state = s2___68) & !(((i___22_present = FALSE) | (i_int___65_present = FALSE)))))) & 
		next(o___20) = o___20 & 
		next(o___20_present) = FALSE & 
		next(o_int___41) = o_int___41 & 
		next(o_int___41_present) = FALSE & 
		next(_current_state) = _current_state;


INVAR ((o_int___41 >= -0sd10_256) & (o_int___41 <= 0sd10_255))

MODULE main

VAR
		i___22 : boolean;
		i___22_present : boolean;
		i_int___65 : signed word[10];
		i_int___65_present : boolean;
		Component___8Var : Component___8(i___22, i___22_present, i_int___65, i_int___65_present);



INVAR ((i_int___65 >= -0sd10_256) & (i_int___65 <= 0sd10_255))


